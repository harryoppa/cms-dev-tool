<?php

namespace TVHung\{Module}\Providers;

use TVHung\{Module}\Models\{Name};
use Illuminate\Support\ServiceProvider;
use TVHung\{Module}\Repositories\Caches\{Name}CacheDecorator;
use TVHung\{Module}\Repositories\Eloquent\{Name}Repository;
use TVHung\{Module}\Repositories\Interfaces\{Name}Interface;
use Illuminate\Support\Facades\Event;
use TVHung\Base\Traits\LoadAndPublishDataTrait;
use Illuminate\Routing\Events\RouteMatched;

class {Module}ServiceProvider extends ServiceProvider
{
    use LoadAndPublishDataTrait;

    public function register()
    {
        $this->app->bind({Name}Interface::class, function () {
            return new {Name}CacheDecorator(new {Name}Repository(new {Name}));
        });

        //--hook
    }

    public function boot()
    {
        $this->setNamespace('{types}/{-name}')
            ->loadHelpers()
            ->loadAndPublishConfigurations(['permissions'])
            ->loadMigrations()
            ->loadAndPublishTranslations()
            ->loadAndPublishViews()
            ->loadRoutes(['web']);

        Event::listen(RouteMatched::class, function () {
            if (defined('LANGUAGE_MODULE_SCREEN_NAME')) {
                \Language::registerModule([{Name}::class]);
            }

            dashboard_menu()->registerItem([
                'id'          => 'cms-{types}-{-name}',
                'priority'    => 5,
                'parent_id'   => null,
                'name'        => '{types}/{-module}::{-name}.name',
                'icon'        => 'fa fa-list',
                'url'         => route('{-name}.index'),
                'permissions' => ['{-name}.index'],
            ]);
        });
    }
}
